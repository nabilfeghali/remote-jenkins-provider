node {
  
  stage("Print Common Variables") {
    
      echo "RJPP_SCM_URL: ${env.RJPP_SCM_URL}"
      echo "RJPP_JENKINSFILE: ${env.RJPP_JENKINSFILE}"
      echo "RJPP_BRANCH: ${env.RJPP_BRANCH}"
      echo "RJPP_LOCAL_MARKER: ${env.RJPP_LOCAL_MARKER}"
    
      echo "Git Repository URL: ${env.GIT_URL}"
      echo "Git Branch: ${env.GIT_BRANCH}"
    
      echo "Job Name: ${env.JOB_NAME}"
      echo "Branch Name: ${env.BRANCH_NAME}"
      echo "Change id: ${env.CHANGE_ID}"  
  }
  
  stage('Checkout') {
        def d = checkout scm
        echo "GIT_URL: " + d.GIT_URL
        echo "GIT_BRANCH: " + d.GIT_BRANCH
        echo "GIT_COMMIT: " + d.GIT_COMMIT
        echo "GIT_AUTHOR_EMAIL: " + d.GIT_AUTHOR_EMAIL
        echo "GIT_COMMITTER_EMAIL: " + d.GIT_COMMITTER_EMAIL
        echo "GIT_COMMITTER_NAME: " + d.GIT_COMMITTER_NAME
        echo "GIT_LOCAL_BRANCH: " + d.GIT_LOCAL_BRANCH
        echo "GIT_PREVIOUS_COMMIT: " + d.GIT_PREVIOUS_COMMIT
        echo "GIT_PREVIOUS_SUCCESSFUL_COMMIT: " + d.GIT_PREVIOUS_SUCCESSFUL_COMMIT
        echo "branch: " + d.GIT_BRANCH
        echo "branch: " + d.GIT_BRANCH
        echo "branch: " + d.GIT_BRANCH
    }
    
  stage("Clone the project") {
    // git branch: 'main', url: 'https://github.com/nabilfeghali/jenkins-demo.git'
  }

  stage("Compilation") {
    // bat "mvnw clean install -DskipTests"
  }

  stage("Tests and Deployment") {
      stage("Running unit tests") {
          // bat "mvnw test -Punit"
      }
      stage("Deployment") {
          // bat 'start /B mvnw spring-boot:run -Dserver.port=8001'
      }
  }
}
